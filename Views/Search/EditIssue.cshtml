@model KnowledgeBase.ViewModel.IssueDetails

@{
    ViewBag.Title = "EditIssue";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>EditIssue</h2>


<div class="panel-body">
    @using (Html.BeginForm("Edit", "Search"))
    {
        <div class="form-group">
            @Html.LabelFor(m => m.Issue.ProductId)
            @Html.DropDownListFor(m => m.Issue.ProductId, new SelectList(Model.Products, "ProductID", "ProductName"), "select Product", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Issue.ProductId)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Issue.ProductVersion)
            @Html.EditorFor(m => m.Issue.ProductVersion, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Issue.ErrorCode)
            @Html.EditorFor(m => m.Issue.ErrorCode, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Issue.IssueHeader)
            @Html.EditorFor(m => m.Issue.IssueHeader, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Issue.IssueHeader)
        </div>

        <div class="form-horizontal">

            <div class="col-lg-9">
                @Html.TextAreaFor(m => m.Issue.IssueText, new { @class = "form-control", @id = "summernote", @raw = 10 })
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-9"></div>
            <div class="col-lg-3">
                <button class="btn btn-success" id="btnSubmit" type="submit">
                    Save
                </button>
            </div>
        </div>

    }
</div>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function () {
      
            $('#summernote').summernote(
                {
                height: 300, // set editor height
                minHeight: null, // set minimum height of editor
                maxHeight: null, // set maximum height of editor
                focus: true,
                onImageUpload: function (files) {
                    for (var i = 0; i < files.length; i++) {
                        send(files[i]);
                    }
                }

            });
        });

//        $('#summernote').summernote('insertText', $("#summernote").val());


        function send(file) {
            //     if (file.type.includes('jpg')) {
            var name = file.name.split(".");
            name = name[0];
            console.log(name);
            var data = new FormData();
            data.append('file', file);
            $.ajax({
                url: '/Search/Savefile',
                type: 'POST',
                contentType: false,
                cache: false,
                processData: false,
                dataType: 'JSON',
                data: data,
                success: function (url) {
                    $('#summernote').summernote('insertImage', url);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(textStatus + " " + errorThrown);
                }
            });
            // }
        }

    </script>
}
